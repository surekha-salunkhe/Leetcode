https://leetcode.com/problems/number-of-good-pairs/description/
Topics: Array, HashTable, Math, Counting

Given an array of integers nums, return the number of good pairs.
A pair (i, j) is called good if nums[i] == nums[j] and i < j.

Example 1:
Input: nums = [1,2,3,1,1,3]
Output: 4
Explanation: There are 4 good pairs (0,3), (0,4), (3,4), (2,5) 0-indexed.

Example 2:
Input: nums = [1,1,1,1]
Output: 6
Explanation: Each pair in the array are good.

Example 3:
Input: nums = [1,2,3]
Output: 0

Constraints:
1 <= nums.length <= 100
1 <= nums[i] <= 100
---------------------------------------------------------------------------------------------------------------------------
My Solution:
class Solution:
    def numIdenticalPairs(self, nums: List[int]) -> int:
        # j = 1
        # i, count = 0, 0
        # n = len(nums)
        # while i != (n - 1):
        #     if j != n:
        #         if i < j and nums[i] == nums[j]:
        #             count += 1
        #         j += 1
        #     else:
        #         j = i + 1
        #         i += 1
        # return count
        # O(N^2)

        count = 0
        freq_map = {}
        for num in nums:
            if num in freq_map:
                count += freq_map[num]
                freq_map[num] += 1
            else:
                freq_map[num] = 1
        return count
        # O(N)
-------------------------------------------------------------------------------------------------------------------------
Complexity: O(N)
